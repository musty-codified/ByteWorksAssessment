# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Geobyte CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -f backend-services/pom.xml clean install
      - name: Build & push Docker image for backend-services
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: mustycodified/geobytes-api
          tags: latest
          registry: docker.io
          dockerfile: backend-services/Dockerfile
          directory: backend-services
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build & push Docker image for frontend
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: mustycodified/geobytes-frontend
          tags: latest
          registry: docker.io
          dockerfile: react-frontend/Dockerfile
          directory: react-frontend
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy-backend-services:
    needs: build
    runs-on: [ geobytes-ec2 ]
    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Pull image from dockerhub
#        run: docker-compose -f $GITHUB_WORKSPACE/docker-compose.yml pull
#
#      - name: Stop existing containers
#        run: docker-compose -f $GITHUB_WORKSPACE/docker-compose.yml down
#
#      - name: Start services
#        run: docker-compose -f $GITHUB_WORKSPACE/docker-compose.yml up -d
         - name: Pull Image from docker hub
           run: sudo docker pull mustycodified/geobytes-api:latest
         - name: Delete old container
           run: sudo docker rm -f api-server
         - name: Run Docker backend-services Image
           run: sudo docker run -d -p 8080:8080 --name api-server mustycodified/geobytes-api:latest

  deploy-react-frontend:
    needs: build
    runs-on: [ geobytes-ec2 ]
    steps:
      - name: Pull Image from docker hub
        run: sudo docker pull mustycodified/geobytes-frontend:latest
      - name: Delete old container
        run: sudo docker rm -f frontend
      - name: Run Docker react-frontend Image
        run: sudo docker run -d -p 80:3000 --name frontend mustycodified/geobytes-frontend:latest
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
